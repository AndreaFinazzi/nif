# This is a basic workflow to help you get started with Actions

name: DevEnvironment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  ROS_DISTRO: foxy
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  GH_TOKEN: ${{ secrets.GHCR_TOKEN }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: ros-tooling/setup-ros@v0.2
        with:
          required-ros-distributions: ${{ env.ROS_DISTRO }}
      - run: |
          ./nifupdate && ./nifbuild

  ade:
    if: success() # Always true
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write

    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - 
        uses: ros-tooling/setup-ros@v0.2
        with:
          required-ros-distributions: ${{ env.ROS_DISTRO }}
          
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - 
        name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.GH_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - 
        name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - 
        name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GH_TOKEN=${{ env.GH_TOKEN }}
          cache-from: type=registry,ref=${{ steps.meta.outputs.tags }}
          cache-to: type=inline
          outputs: type=docker,dest=/tmp/nif_image.tar

      # build repository in created image.
      -
        name: nif build
        run: |
          docker load --input /tmp/nif_image.tar
          docker image ls -a
          docker run --rm -e RMW_IMPLEMENTATION=rmw_cyclonedds_cpp -e ROS_DISTRO=foxy ${{ steps.meta.outputs.tags }} bash -c "cd ~/nif && ./nifupdate && ./nifbuild"
#          docker run --rm -it $(docker build -q .)


#   validate:
#     needs: [ ade ]
#     runs-on: ubuntu-20.04
#     container: 
# #       Must specify it statically... https://github.community/t/how-to-use-env-with-container-image/17252/17
#       image: ${{ secrets.GHCR_TOKEN }}@ghcr.io/andreafinazzi/nif:master 
#     permissions:
#       contents: read
#       packages: write
#     steps:
#       - 
#         name: Checkout repository
#         uses: actions/checkout@v2
#         with:
#           submodules: 'recursive'
#       - 
#         uses: ros-tooling/setup-ros@v0.2
#         with:
#           required-ros-distributions: ${{ env.ROS_DISTRO }}
#       - 
#         name: Build
#         run: |
#           ./nifbuild
